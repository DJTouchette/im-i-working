{"version":3,"sources":["logo.svg","getDates.js","App.js","reportWebVitals.js","index.js"],"names":["startDayDefault","Date","getDates","queryDate","daysWork","startDay","weeks","isWorking","daysOff","daysOn","date","addDays","days","result","setDate","getDate","dateRange","start","end","range","next","i","currentDate","in7Days","push","queryOffDate","queryOffDateMonth","getUTCMonth","queryOffDateDay","getUTCDate","queryOffDateYear","getUTCFullYear","foundRange","dayOff","forEach","dayI","month","day","year","console","log","isOff","Cal","startMonth","startYear","events","id","flat","from","toISOString","to","title","color","datee","xurrent","App","useState","hasRan","setDays","startDate","setStartDate","daysWorked","setDaysWorked","setQueryDate","style","textAlign","marginTop","className","Card","Content","header","extra","Label","selected","onChange","Input","type","e","data","Number","value","Button","onClick","dates","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f04db66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const startDayDefault = new Date();\n\nfunction getDates(queryDate, daysWork, startDay = startDayDefault, weeks = 500) {\n  let isWorking = true;\n  let daysOff = [];\n  let daysOn = [];\n\n  const getDaysArray = function(start, end) {\n      for(var arr=[],dt=new Date(start); dt<=end; dt.setDate(dt.getDate()+1)){\n          arr.push(new Date(dt));\n      }\n      return arr;\n  };\n\n  let date = startDay;\n  const addDays = (date, days = 1) => {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  };\n\n  const dateRange = (start, end, range = []) => {\n    if (start > end) return range;\n    const next = addDays(start, 1);\n    return dateRange(next, end, [...range, start]);\n  };\n\n  for(var i = 0; i < weeks; i ++) {\n    const currentDate = date;\n    const in7Days = addDays(currentDate, daysWork);\n    if (isWorking) {\n      daysOn.push(dateRange(currentDate, in7Days));\n    } else {\n      daysOff.push(dateRange(currentDate, in7Days));\n    }\n\n    date = addDays(date, daysWork + 1)\n    isWorking = !isWorking;\n  }\n\n  const queryOffDate = queryDate; \n\n  const queryOffDateMonth = queryOffDate.getUTCMonth() + 1\n  const queryOffDateDay = queryOffDate.getUTCDate()\n  const queryOffDateYear = queryOffDate.getUTCFullYear()\n\n  let foundRange = false\n  let range = []\n  let dayOff = 0;\n  daysOff.forEach((dateRange) => {\n    let dayI = 1;\n    dateRange.forEach((date) => {\n      const month = date.getUTCMonth() + 1\n      const day = date.getUTCDate()\n      const year = date.getUTCFullYear()\n\n      if (queryOffDateYear === year && queryOffDateMonth === month && queryOffDateDay == day) {\n        foundRange = true;\n        range = dateRange\n        dayOff = dayI\n      }\n      dayI += 1;\n    });\n  });\n\n  if (foundRange) {\n    console.log('Your off !!')\n    console.log(`It is your ${dayOff} day off`)\n    return {daysOn, daysOff, isOff: true};\n  } else {\n    daysOn.forEach((dateRange) => {\n      let dayI = 1;\n      dateRange.forEach((date) => {\n        const month = date.getUTCMonth() + 1\n        const day = date.getUTCDate()\n        const year = date.getUTCFullYear()\n        if (queryOffDateYear === year && queryOffDateMonth === month && queryOffDateDay == day) {\n          foundRange = true;\n          range = dateRange\n          dayOff = dayI\n        }\n        dayI += 1;\n      });\n    });\n\n    console.log('Your working')\n    console.log(`It is your ${dayOff} day of working`)\n    console.log(range)\n\n    return {daysOn, daysOff, isOff: false};\n  }\n\n}\n\nexport default getDates;\n","import logo from './logo.svg';\nimport './App.css';\nimport getDates from './getDates';\nimport { useState } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport { Card, Label, Input, Button } from 'semantic-ui-react'\nimport Calendar from 'react-awesome-calendar';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction Cal({daysOff, daysOn, isOff, startMonth, startYear, year, month, day}) {\n  const events = [];\n  let id = 0;\n  daysOn.flat().forEach((date) => {\n    events.push({ id, from: date.toISOString(), to: date.toISOString(), title: 'Working', color: '#1ccb9e'})\n    id += 1;\n  });\n  daysOff.flat().forEach((datee) => {\n    events.push({ id, from: datee.toISOString(), to: datee.toISOString(), title: 'Off', color: '#fd3153'})\n    id += 1;\n  });\n  console.log(year, month, day)\n\n  return (\n    <Calendar\n      events={events}\n      year={year}\n      month={month}\n      day={day}\n      xurrent={{year, month, day}}\n    />\n  );\n  \n}\n\n\nfunction App() {\n  const [days, setDays] = useState({daysOff: [], daysOn: [], isOff: false, hasRan: false});\n  const [startDate, setStartDate] = useState(new Date());\n  const [daysWorked, setDaysWorked] = useState(1);\n  const [queryDate, setQueryDate] = useState(new Date());\n\n  const handleCheck = () => {\n    const dates = getDates(queryDate, daysWorked, startDate)\n    setDays({...dates, hasRan: true});\n  };\n\n  return (\n    <div>\n      {days.hasRan ? <h1 style={{textAlign: 'center', marginTop: '10px'}}>{days.isOff ? \"You are off !\" : \"You are not off !\"}</h1>: null}\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      {days.hasRan ? null : \n\n      <Card>\n        <Card.Content header='Are you working?' />\n        <Card.Content extra>\n          <Label>\n            My next set starts on:\n          </Label>\n          <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n          <Label>\n            Date to check:\n          </Label>\n          <DatePicker selected={queryDate} onChange={(date) => setQueryDate(date)} />\n          <Label>\n            How many days do you work for?\n          </Label>\n          <Input type=\"number\" onChange={(e, data) => setDaysWorked(Number(data.value))}/>\n          <Button onClick={handleCheck}>Check</Button>\n        </Card.Content>\n      </Card>\n      }\n\n\n        {days.hasRan ? <Cal {...days} year={queryDate.getUTCFullYear()} month={queryDate.getUTCMonth()} day={queryDate.getUTCDate()}  /> : null}\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}